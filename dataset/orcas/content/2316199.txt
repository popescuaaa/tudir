JavaScript syntax is the set of rules, how 
JavaScript programs are constructed:
The JavaScript syntax defines two types of values:
Fixed values are called Literals.
Variable values are called Variables.
The two most important syntax rules for fixed values are:
1. Numbers are written with or 
without decimals:
2. Strings are text, written within double or single quotes:
In a programming language, variables 
are used to store data values.
JavaScript uses the keywords var,
let and const to declare variables.
An equal sign is used to assign values to variables.
In this example, x is defined as a variable. Then, x is 
assigned (given) the value 
6:
JavaScript uses arithmetic operators ( + - * / ) to 
compute values: 
JavaScript uses an assignment operator ( = ) to assign 
values to variables: 
An expression is a combination of values, variables, and operators, 
which computes to a value.
The computation is called an evaluation.
For example, 5 * 10 evaluates to 50:
Expressions can also contain variable values:
The values can be of various types, such as numbers and strings.
For example, "John" + " " + "Doe", evaluates to "John Doe":
JavaScript keywords are used to 
identify actions to be performed.
The
let keyword tells the browser to create variables:
The
var keyword also tells the browser to create variables:
In these examples, using var
or let will produce the same result.
You will learn more about var
and let later in this tutorial.
Not all JavaScript statements are "executed".
Code after double slashes
// or between /* and */ is treated as a comment.
Comments are ignored, and will not be 
executed:
You will learn more about comments in a later chapter.
Identifiers are JavaScript names.
Identifiers are used to name variables and keywords, and functions.
The rules for legal names are the same in most programming languages.
A JavaScript name must begin with:
Subsequent characters may be letters, digits, underscores, or dollar signs.
Numbers are not allowed as the first character in names.
This way JavaScript can easily distinguish identifiers from numbers.
All JavaScript identifiers are 
case sensitive.  
The variables lastName and lastname, 
are two different variables:
JavaScript does not interpret LET or Let as the keyword let.
Historically, programmers have used different ways of joining multiple words into one variable name:
Hyphens:
first-name, last-name, master-card, inter-city.
Hyphens are not allowed in JavaScript. They are reserved for subtractions.
Underscore:
first_name, last_name, master_card, inter_city.
Upper Camel Case (Pascal Case):
FirstName, LastName, MasterCard, InterCity.

Lower Camel Case:
JavaScript programmers tend to use camel case that starts with a lowercase letter:
firstName, lastName, masterCard, interCity.

JavaScript Character Set
JavaScript uses the Unicode character set.
Unicode covers (almost) all the characters, punctuations, and symbols in the world.
For a closer look, please study our Complete Unicode Reference.


❮ Previous
Next ❯




Lower Camel Case:
JavaScript programmers tend to use camel case that starts with a lowercase letter:
firstName, lastName, masterCard, interCity.
JavaScript uses the Unicode character set.
Unicode covers (almost) all the characters, punctuations, and symbols in the world.
For a closer look, please study our Complete Unicode Reference.
We just launchedW3Schools videos
Get certifiedby completinga course today!
If you want to report an error, or if you want to make a suggestion, do not hesitate to send us an e-mail:
help@w3schools.com
Your message has been sent to W3Schools.
